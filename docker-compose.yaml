version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: load-balancer-service
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_HOST: "${DB_HOST}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network

networks:
  app-network:

volumes:
  redis-data:
  postgres-data:
